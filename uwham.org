#+OPTIONS: ^:nil
#+TITLE: UWHAM

* how to install
  - dependence: requires "GNU scientific library"\\
	http://www.gnu.org/software/gsl/
  - compile:
	#+BEGIN_SRC 
	g++ uwham.cpp -lm -lgsl -lgslcblas -o uwham.o	
	#+END_SRC
	
* list of options:
  #+ATTR_HTML: :border 2 :rules all :frame border
  |---+----------------------------------------------+---------|
  |   | simple description                           | default |
  |---+----------------------------------------------+---------|
  | h | print out help information                   |       - |
  | d | potential energy input file                  |       - |
  | t | temperature                                  |     300 |
  | g | GROMACS input format                         |      -1 |
  | i | unit of potential energies in the input file |       0 |
  | o | unit of free energies of the output          |       0 |
  | m | iteration method                             |       0 |
  | q | length of the equilibrium period             |       1 |
  | n | number of the iterations                     |  1.0e10 |
  | e | error tolerance                              |       - |
  | w | print list of observation weights            |    none |
  | z | normalization                                |      no |
  |---+----------------------------------------------+---------|


** options and descriptions
*** -d potential_energy_input_file
    This file contains $M$ blocks. Each block corresponds to a $\lambda$-state. At the beginning of each block, there are
    a comment line or multiple comment lines starting with "@" or "#". Do not leave blank lines between blocks. After
    comments lines, there is a $N_i \times M$ matrix. The matrix element $p_{ij} is the potential energy (or potential
    energy difference, see Ref.) of the $i^{th}$ observation (observed at this $\lambda$-state) at the $j^{th}$
    $\lambda$-state. The default unit of potential energies is $k_B T$. See option "i" and "o" for using a different unit
    for energy.

*** -i input_unit -o output_unit
    The default unit for potential energies used in UWHAM is $k_B T$. However, if the data generated by simulations
    running at a single temperature, UWHAM program can read and output energies in a different unit. For these two
    options, "0" represents $k_B T$; "1" represents $kcal/mol$; and "2" represents "kJ/mol".

*** -t temperature
    The temperature of the simulations. This option is only useful when the simulations are run at a single
    temperature and when the units of the input and output are not $k_B T$. When using UWHAM to analyze data generated
    by simulations run at different temperatures such as temperature replica exchange simulations, the input data in the
    potential energy matrix file must be in unit of $k_B T$.

*** -g GROMACS_format
    This option is for GROMACS users. The free energy perturbation simulation of GROMACS provides all the data required
    by the potential energy input file (see option "d"). Those information is stored in the "xvg" file of each
    $\lambda$-state. One can use "cat" to combine all these "xvg" files together to generate an input file for the "d"
    option. When "GROMACS_format" is non-negative (0 for NVT system, and 1 for NPT system), UWHAM will automatically
    extract the required information from the input file and set input_unit to "2" (namely "kJ/mol", see option "i").

*** -m iteration_method
    Two iteration methods have been implemented in this wham program
**** -m 0: self-consistent iteration 
     This is the basic iteration method. It is slow but robust, and uses less memory. It calculates the density of states
     based on previous values of partition functions, then calculates the partition functions bases on the density of
     states, so on and so forth.
**** -m 1: Convex Newton-Raphson 
     This method optimize the convex function by Newton-Raphson algorithm. See Ref(2). It converges much faster than the
     self-consistent iteration, but less stable and uses more memory. The Newton-Raphson solver needs the GNU scientific
     library for matrix inversion. 

*** -q equilibrium_length
    the initial guesses are critical for the Newton-Raphson solver to converge. This UWHAM program uses the
    "self-consistent iteration" to obtain the initial guesses. The number given to the option "q" decides how many
    self-consistent iterations run before using the Newton-Raphson solver to minimize the convex function.  The UWHAM
    program will double the number of self-consistent iterations automatically if the Newton-Raphson cannot converge.

*** -e tolerance_error -n iteration_number
    At the end of each iteration, wham program calculates the free energy estimates change
    \begin{equation}
    \Delta f = \frac {|f_{new} - f_{old}|}{f_{old}} \,.
    \end{equation}
    If all the $\Delta f$ are smaller than the tolerance_error or the number of iteration is larger than the
    iteration_number, the wham program will stop iteration and write the output. 

*** -w weights_print_list
    weights_print_list is list for $\lambda$-states. For example, "1,3,5" means the first, the third and the fifth
    states; "2-4" represents the second, the third and the fourth $\lambda$-states; and "1,3-5,9" represents the first,
    the third, the fourth, the fifth and the ninth $\lambda$-states. Note the number of $\lambda$-state starts from one,
    not zero. At the end of UWHAM calculation, the weights of each observation at all the states required in the
    weights_print_list will be print out in the "weights.data" file. The matrix in "weights.data" has $N$ rows and $m$
    columns, where $N$ is the total number of observations, and $m$ is the total number of $\lambda$-states in the
    weights_print_list. The matrix element $p_{ij} is the weight of the $i^th$ observation at the $j^th$
    $\lambda$-state. The order of the observations is the same as the order of those observations appearing in the
    potential_energy_input_file (without comment lines), see option "d". If the weights_print_list contains one single
    value and the value is zero (-w 0), for each observation, only the weight of that observation at the state which it
    was observed will be printed out in the "weights.data" file. 


*** -z normalization
    This option is a switch to normalize the weights, namely the probability of observing each observation of each
    state. In default the weights are not normalized.
    
* references:
  1) Theory of binless multi-state free energy estimation with applications to protein-ligand binding ([[http://aip.scitation.org/doi/10.1063/1.3701175][link]])
